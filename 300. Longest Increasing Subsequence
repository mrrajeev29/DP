Given an integer array nums, return the length of the longest strictly increasing 
subsequence
.

 

Example 1:

Input: nums = [10,9,2,5,3,7,101,18]
Output: 4
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.
Example 2:

Input: nums = [0,1,0,3,2,3]
Output: 4
Example 3:

Input: nums = [7,7,7,7,7,7,7]
Output: 1
 

code:-



class Solution {
public:
int func(vector<int>& nums)
{
    int n=nums.size();
    vector<int>v(n,0);
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<i;j++)
        {
            if(nums[i]>nums[j])
            {
                if(v[j]+1>v[i])
                {
                    v[i]=v[j]+1;
                }
            }
        }
    }
    return *max_element(v.begin(),v.end())+1;
}
    int lengthOfLIS(vector<int>& nums) {
        return func(nums);
    }
};
