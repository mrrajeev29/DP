** To get longest palindromic subsequence reverse the given string and use as text2 in the below code their LCS will give longest palindromic subsequence. **


class Solution {
public:

    int LCS(string text1,string text2)
    {
        vector<vector<int>>dp(text1.length()+1,vector<int>(text2.length()+1,0));
        for(int i=text1.length()-1;i>=0;i--)
        {
            for(int j=text2.length()-1;j>=0;j--)
            {
                int ans=0;
                if(text1[i]==text2[j])
                {
                    ans=1+dp[i+1][j+1];
                }
                else
                {
                    ans=max(dp[i+1][j],dp[i][j+1]);
                }
                dp[i][j]=ans;
            }
        }
        return dp[0][0];
    }
    int longestCommonSubsequence(string text1, string text2) {
        //vector<vector<int>>dp(text1.length(),vector<int>(text2.length(),-1));
        return LCS(text1,text2);
    }
}
