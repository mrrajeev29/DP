// q.n :- 746

class Solution {
public:
    int func(vector<int>&cost,int n,vector<int>&dp )
    {
        if(dp[n]!=-1)
        {
            return dp[n];
        }
        if(n<=1)
        {
            return dp[n]=0;
        }
        if(n==2)
        {
            return dp[n]=min(cost[0],cost[1]);
        }
        return dp[n]=min(func(cost,n-1,dp)+cost[n-1],func(cost,n-2,dp)+cost[n-2]); 
    }
    int minCostClimbingStairs(vector<int>& cost) {
        vector<int>dp(cost.size()+1,-1);
        return func(cost,cost.size(),dp);
    }
};
